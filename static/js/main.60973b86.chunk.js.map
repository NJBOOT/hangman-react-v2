{"version":3,"sources":["components/LetterBox/LetterBox.module.css","components/Letters/Letters.module.css","components/Nav/Nav.module.css","components/Modal/Modal.module.css","components/Backdrop/Backdrop.module.css","components/Button/Button.module.css","helpers.js","components/LetterBox/LetterBox.js","components/Letters/Letters.js","components/Nav/Nav.js","components/Backdrop/Backdrop.js","components/Button/Button.js","components/Modal/Modal.js","containers/Main/Main.js","App.js","index.js"],"names":["module","exports","wordList","letters","LetterBox","props","className","classes","Letter","el","Letters","answerArray","map","i","key","Nav","style","marginLeft","wins","textTransform","guessed","guessesLeft","Backdrop","visible","Button","onClick","handleClick","children","Modal","message","gameWon","word","color","marginBottom","secretWord","gameOver","transform","opacity","playAgain","Main","state","generateWord","index","Math","floor","random","length","split","forEach","push","setState","checkValidity","guess","includes","correctUserGuess","incorrectUserGuess","concat","wordsMatch","join","handleUserGuess","e","userGuess","this","document","addEventListener","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60973b86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LetterBox\":\"LetterBox_LetterBox__qNOak\",\"Letter\":\"LetterBox_Letter__28hLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Letters\":\"Letters_Letters__3XA1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__cViw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2O1l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","export const wordList = [\n  \"plain\",\n  \"valid\",\n  \"card\",\n  \"landowner\",\n  \"visit\",\n  \"temple\",\n  \"reduction\",\n  \"feminine\",\n  \"attachment\",\n  \"capital\",\n  \"publication\",\n  \"jury\",\n  \"silence\",\n  \"cover\",\n  \"leaflet\",\n  \"layer\",\n  \"margin\",\n  \"science\",\n  \"wind\",\n  \"posture\",\n];\nexport const letters = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n","import React from \"react\";\nimport classes from \"./LetterBox.module.css\";\n\nconst LetterBox = props => {\n  return (\n    <div className={classes.LetterBox}>\n      <div className={classes.Letter}>{props.el}</div>\n    </div>\n  );\n};\n\nexport default LetterBox;\n","import React from \"react\";\nimport classes from \"./Letters.module.css\";\nimport LetterBox from \"../LetterBox/LetterBox\";\n\nconst Letters = props => {\n  return (\n    <div className={classes.Letters}>\n      {props.answerArray.map((el, i) => (\n        <LetterBox key={i} el={el} />\n      ))}\n    </div>\n  );\n};\n\nexport default Letters;\n","import React from \"react\";\nimport classes from \"./Nav.module.css\";\nconst Nav = props => {\n  return (\n    <nav className={classes.Nav}>\n      <h1 style={{ marginLeft: 20 }}>React Hangman</h1>\n      <ul>\n        <li>\n          Wins: <strong>{props.wins}</strong>\n        </li>\n        <li>\n          Guessed Letters:{\" \"}\n          <span style={{ textTransform: \"uppercase\" }}>\n            <strong>{props.guessed}</strong>\n          </span>\n        </li>\n        <li>\n          Guesses Left: <strong>{props.guessesLeft}</strong>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = props => {\n  return props.visible ? <div className={classes.Backdrop}></div> : null;\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\nconst Button = props => {\n  return (\n    <button className={classes.Button} onClick={props.handleClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Fragment } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport Button from \"../Button/Button\";\n\nconst Modal = props => {\n  const message = props.gameWon ? \"Congrats, you won.\" : \"Sorry, you lost\";\n  const word = props.gameWon ? null : (\n    <h2 style={{ color: \"rgb(39, 88, 104)\", marginBottom: 50 }}>\n      The word was{\" \"}\n      <strong style={{ textTransform: \"uppercase\" }}>\n        \"{props.secretWord}\"\n      </strong>\n    </h2>\n  );\n  return (\n    <Fragment>\n      <Backdrop visible={props.gameOver} />\n      <div\n        className={classes.Modal}\n        style={{\n          transform: props.gameOver ? \"translateY(0)\" : \"translateY(-100vh)\",\n          opacity: props.gameOver ? 1 : 0,\n          color: props.gameWon ? \"green\" : \"red\",\n        }}\n      >\n        <h1>{message}</h1>\n        {word}\n        <Button handleClick={props.playAgain}>PLAY AGAIN?</Button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { Component, Fragment } from \"react\";\nimport { letters, wordList } from \"../../helpers\";\nimport Letters from \"../../components/Letters/Letters\";\nimport Nav from \"../../components/Nav/Nav\";\nimport Modal from \"../../components/Modal/Modal\";\n\nclass Main extends Component {\n  state = {\n    answerArray: [],\n    guessed: [],\n    guessesLeft: 8,\n    wins: 0,\n    secretWord: \"\",\n    gameOver: false,\n    gameWon: false,\n  };\n\n  componentDidMount() {\n    this.generateWord();\n    document.addEventListener(\"keydown\", this.handleUserGuess);\n  }\n\n  generateWord = () => {\n    const index = Math.floor(Math.random() * wordList.length);\n    const secretWord = wordList[index];\n    let answerArray = [];\n    secretWord.split(\"\").forEach(el => answerArray.push(\" \"));\n    this.setState({ secretWord: secretWord, answerArray: answerArray });\n  };\n\n  checkValidity = guess => {\n    if (\n      letters.includes(guess) &&\n      this.state.guessesLeft > 0 &&\n      !this.state.guessed.includes(guess)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  playAgain = () => {\n    this.setState({\n      answerArray: [],\n      guessed: [],\n      guessesLeft: 8,\n      secretWord: \"\",\n      gameOver: false,\n      gameWon: false,\n    });\n    this.generateWord();\n  };\n\n  correctUserGuess = guess => {\n    for (let i = 0; i < this.state.secretWord.length; i++) {\n      if (guess === this.state.secretWord[i]) {\n        let answerArray = this.state.answerArray;\n        answerArray[i] = guess;\n        this.setState({ answerArray: answerArray });\n      }\n    }\n  };\n\n  incorrectUserGuess = guess => {\n    this.setState({\n      guessesLeft: this.state.guessesLeft - 1,\n      guessed: this.state.guessed.concat(guess),\n    });\n  };\n\n  wordsMatch = () => {\n    return this.state.secretWord === this.state.answerArray.join(\"\");\n  };\n\n  gameWon = () => {\n    this.setState({\n      wins: this.state.wins + 1,\n      gameOver: true,\n      gameWon: true,\n    });\n  };\n\n  handleUserGuess = e => {\n    let userGuess = e.key;\n    if (this.checkValidity(userGuess)) {\n      if (this.state.secretWord.includes(userGuess)) {\n        this.correctUserGuess(userGuess);\n        if (this.wordsMatch()) {\n          this.gameWon();\n        }\n      } else {\n        this.incorrectUserGuess(userGuess);\n        if (this.state.guessesLeft === 0) {\n          this.setState({ gameOver: true });\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Nav\n          wins={this.state.wins}\n          guessed={this.state.guessed}\n          guessesLeft={this.state.guessesLeft}\n        />\n        <Modal\n          gameWon={this.state.gameWon}\n          gameOver={this.state.gameOver}\n          playAgain={this.playAgain}\n          secretWord={this.state.secretWord}\n        />\n        <Letters answerArray={this.state.answerArray} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./containers/Main/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}